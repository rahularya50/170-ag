// Code generated by entc, DO NOT EDIT.

package codingproblem

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the codingproblem type in the database.
	Label = "coding_problem"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldStatement holds the string denoting the statement field in the database.
	FieldStatement = "statement"
	// FieldReleased holds the string denoting the released field in the database.
	FieldReleased = "released"
	// Table holds the table name of the codingproblem in the database.
	Table = "coding_problems"
)

// Columns holds all SQL columns for codingproblem fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldStatement,
	FieldReleased,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "170-ag/ent/generated/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultStatement holds the default value on creation for the "statement" field.
	DefaultStatement string
	// StatementValidator is a validator for the "statement" field. It is called by the builders before save.
	StatementValidator func(string) error
	// DefaultReleased holds the default value on creation for the "released" field.
	DefaultReleased bool
)
