// Code generated by entc, DO NOT EDIT.

package codingtestcasedata

import (
	"time"

	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the codingtestcasedata type in the database.
	Label = "coding_test_case_data"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldInput holds the string denoting the input field in the database.
	FieldInput = "input"
	// FieldOutput holds the string denoting the output field in the database.
	FieldOutput = "output"
	// EdgeTestCase holds the string denoting the test_case edge name in mutations.
	EdgeTestCase = "test_case"
	// Table holds the table name of the codingtestcasedata in the database.
	Table = "coding_test_case_data"
	// TestCaseTable is the table that holds the test_case relation/edge.
	TestCaseTable = "coding_test_cases"
	// TestCaseInverseTable is the table name for the CodingTestCase entity.
	// It exists in this package in order to avoid circular dependency with the "codingtestcase" package.
	TestCaseInverseTable = "coding_test_cases"
	// TestCaseColumn is the table column denoting the test_case relation/edge.
	TestCaseColumn = "coding_test_case_data_test_case"
)

// Columns holds all SQL columns for codingtestcasedata fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldInput,
	FieldOutput,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "170-ag/ent/generated/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// DefaultInput holds the default value on creation for the "input" field.
	DefaultInput string
	// DefaultOutput holds the default value on creation for the "output" field.
	DefaultOutput string
)
