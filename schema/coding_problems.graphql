extend type Query {
  coding_problem(id: ID!): CodingProblem
  coding_problems(
    after: Cursor
    first: Int
    before: Cursor
    last: Int
    include_unreleased: Boolean! = false
  ): CodingProblemConnection!
}

extend type Mutation {
  new_problem(input: CodingProblemInput): CodingProblem
}

type CodingProblemConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [CodingProblemEdge!]
}

type CodingProblemEdge {
  node: CodingProblem!
  cursor: Cursor!
}

type CodingProblem implements Node {
  id: ID!
  name: String!
  statement: String!
  released: Boolean!
}

input CodingProblemInput {
  name: String!
  statement: String!
  released: Boolean!
}
