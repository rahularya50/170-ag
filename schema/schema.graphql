# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# Boilerplate
interface Node {
  id: ID!
}

scalar Cursor

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: Cursor!
  endCursor: Cursor!
}

type Query {
  viewer: User
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node!]!
  user(id: ID!): User
  coding_problem(id: ID!): CodingProblem
  coding_problems(
    after: Cursor
    first: Int
    before: Cursor
    last: Int
    include_unreleased: Boolean! = false
  ): CodingProblemConnection!
}

type Mutation {
  new_user(name: String): User
  new_problem(input: CodingProblemInput): CodingProblem
}

type User implements Node {
  id: ID!
  email: String!
  name: String
  is_staff: Boolean!
}

type CodingProblem implements Node {
  id: ID!
  name: String!
  statement: String!
  released: Boolean!
}
type CodingProblemConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [CodingProblemEdge!]!
}

type CodingProblemEdge {
  node: CodingProblem!
  cursor: Cursor!
}

input CodingProblemInput {
  name: String!
  statement: String!
  released: Boolean!
}
